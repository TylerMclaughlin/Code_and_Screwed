let screw = slow 422 $ n "1 .. 422"
let flanger lfoRate nudgeAmount pitchAmount = nudge (fast lfoRate $ range (-nudgeAmount) nudgeAmount sine) # speed (fast lfoRate $ range (1 - pitchAmount) (1 + pitchAmount) sine)
let mcm a b c = when (\t -> (t `mod` a) >= b &&  (t `mod` a)  < (b+c))

setcps(95.16/60*1.12)

setcps(95.16/60*1.04)
setcps(95.16/60/1.09)

hush

resetCycles

d2 $ stack [
    slow 8 $ struct "t t t*2 t t t t*2 t" $ n "6"
    -- slow 1 $ struct "t(3,8)" $ n "6"
    # stack [
        s "808bd" # cut 15,
        s "808bd" # cut 16 # flanger 0.222 0.005 0.02
    ] # gain 1.2 # shape 0.3 # up (-2),
    slow 2 $ struct "t" $ n "5"
    # stack [
        s "[808cp]",
        s "[808cp]" # flanger 0.222 0.005 0.03
    ] # shape "0.4 0.39 0.31 0.4 0.38 0.4 0.41"
    # rel 0.25
    # hpf 200
    # up "0.075 -0.073 -0.04 0.06 0.71 -0.61 0.06 -0.55 ",
    slow 1 $ struct "<[~ t] [t t] [ ~ t] <[~ t*2], [~ [~ t]]> [~ t] [ ~ t] [~ t] [~ t] >"
    $ slow 8 $ n "4 4 4 4 4 4 6 4"
    # stack [
        s "808hh" # cut 12,
        s "808hh" # cut 13 # flanger 0.111 0.01 0.02
    ] # shape "0.32 0.33 0.31 0.32 0.33 0.32"
] # orbit 1 # room 0.12 # up (-0.5)

resetCycles

hush

resetCycles

d1 $ fast 1
   -- $ (# legato 1.0)
   -- $ slice 2 "1 3"
   $ slice 4 "2 1 1 2" -- take my heart don't break my heart
   $ mcm 16 0 4 (slice 2 "1 3") $ mcm 16 8 4 (slice 4 "2 1 1 2") -- every other na na na na na, na na na na na , naaaa naaa naaa naaa naaa na
   -- $ mcm 16 0 4 (slice 2 "1 3") $ mcm 16 4 4 (slice 4 "2 1 1 2") $ mcm 16 8 4 (slice 2 "2 3") $ mcm 16 12 4 (slice 4 "2 1 3 2")
   -- $ mcm 8 4 2 (slow 2 . slice 2 "1 1 1 1 1 1 1 4" . fast 2)
   -- $ mcm 16 0 8 (slice 4 "2 1 1 2" . (# legato 0.95) . (# shape 0.3))
   -- $ mcm 32 8 1 (slice 4 "3 3 3 ~" . (# legato 0.95) . (# shape 0.3))
   -- $ mcm 32 12 2 (slice 4 "1 ~ ~ 3 ~ ~ 4 ~" . (# legato 1.5) . (# shape 0.3))
   -- mcm 16 12 4 (slice 4 "1 ~ ~ 3 ~ ~ 4 ~" . (# legato 1.5) . (# shape 0.3))
   -- $ slice 4 "3 1 3 1"
   -- $ slow 2 . slice 4 "1 1 1 4 4 4 3 3" . fast 2
   -- $ slow 2 $ slice "2 4" "1 1 3(3,8) 4 1 1 3 4"  $ fast 2
   -- $ slow 2 $ slice "2 4" "1 1 1(3,8) 2 1 1 3 4"  $ fast 2
   $ mcm 32 4 1 (slow 2 . slice "2 4" "3 1 3(3,8) 3 3 1 3 1"  . fast 2)
   $ mcm 32 20 1 ( slice "2 4" "1 3 1 3" )
   -- $ slow 2 $ slice "4 2 3 2" "1 1 3(3,8) 4 1 1 3 4"  $ fast 2
   -- $ slice 4 "3 3 2 1"
   $ stack [
    mcm 32 4 2 (slice 4 "1 3 1 3")
    $ stack [  -- rhythm section
        screw # s "thb" # gain 0.7 # cut 1,
        screw # s "thb" # gain 0.7 # cut 14
        # flanger 0.2222 0.02 0.012,
        screw # s "thx" # cut 2,
        -- screw # s "thk" # cut 3,
        screw # s "thd" # cut 4,
        screw # s "ths" # cut 5
    ] # shape 0.4,
    -- mcm 8 0 4 (slice 4 "1 2 3 4" . slice 2 "1 4")
    mcm 16 4 4 (slice 4 "2 2 4 2" . slice 2 "4 3")
    $ mcm 16 12 4 (slice 4 "4 2 4 2")
    $ stack [
        screw # s "thp" # cut 6 # gain 0.7,
        screw # s "thp" # cut "6 10" # gain 0.7 # flanger 0.1111 0.02 0.01
        ] # lpf 2000 # shape 0.2,
    -- struct "t(3,8)"
    screw # s "thg" # cut 7 # shape 0.2,
    -- mcm 16 4 4 (slice 4 "1 2 3 4")
    fast 1
    -- $ mcm 16 4 2 (struct "t(3,8,2)") -- omit during second "head over heels" in chorus
    $ mcm 16 12 2 (slice 4 "3 1 3 1") -- turn off during second chord in verse and back on in first phrase
    $ mcm 32 8 2 (slice 4 "1 1 2 1")
    $ mcm 32 30 2 (juxBy 0.75 (# accelerate 0.2))
    $ stack [
        screw # s "thv" # cut 8 # gain 0.75,
        screw # s "thv" # cut 9 # gain 0.75 # flanger 0.222 0.02 0.0135
    ] # shape 0.3 # lpf 14000
] # unit "c" # gain 1.1 # hpf 40
